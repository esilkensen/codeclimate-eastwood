- cwd                  (.getCanonicalFile (io/file "."))
- linters              default-linters
- debug                #{}
- parallel?            :none
- source-paths         #{}
- test-paths           #{}
* namespaces           #{:source-paths :test-paths}  "
- exclude-namespaces   #{}
- config-files         #{}
- builtin-config-files default-builtin-config-files

Documented:

* :namespaces
  Vector of namespaces to lint. A keyword :source-paths in this vector will be replaced with a list
  of namespaces in your Leiningen :source-paths and their subdirectories. These namespaces will be
  in an order that honors inter-namespace dependencies as determined by :require and :use keys in ns
  forms. Similarly for a keyword :test-paths. If you do not specify :namespaces, it defaults to
  [:source-paths :test-paths].
* :exclude-namespaces
  Vector of namespaces to exclude. :source-paths and :test-paths may be used here as they can be for
  :namespaces. Defaults to an empty list if you do not specify :exclude-namespaces.
* :source-paths
  is normally taken from your Leiningen project.clj file, which is [ "src" ] by default if not
  specified there. You can also specify :source-paths in the Eastwood option map to override what
  Leiningen uses.
* :test-paths
  is similar in behavior to :source-paths, except it defaults to [ "test" ] if not specified in your
  project.clj file.

* :linters
  Linters to use. If not specified, same as [:default], which is all linters except those documented
  as 'disabled by default'.
* :exclude-linters
  Linters to exclude
* :add-linters
  Linters to add. The final list of linters is the set specified by :linters, taking away all in
  :excluded-linters, then adding all in :add-linters

The keyword :all in any of the collections of linters listed above will be replace with the
collection of all linters. The keyword :default will be replaced with the collection of default
linters. Thus :linters [:all] enables all linters, even those disabled by default, and :linters
[:all] :exclude-linters [:default] enables only those that are disabled by default.


You can specify the key :builtin-config-files in the options map to override the built-in config
files read. It defaults to ["clojure.clj" "clojure-contrib.clj" "third-party-libs.clj"]. All such
file names are only looked for in Eastwood's built-in config files.

Similarly you can specify :config-files in the options map to give additional files to read. These
are file names that can be anywhere in your file system, specified as strings, or if Eastwood is
invoked from the REPL, anything that can be passed to clojure.java.io/reader.
